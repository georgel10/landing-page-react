{"version":3,"sources":["assets/logo.svg","assets/illustration-editor-desktop.svg","assets/illustration-phones.svg","assets/illustration-laptop-desktop.svg","componets/UI/atoms/Button.tsx","componets/UI/atoms/Logo.tsx","componets/UI/atoms/MenuItem.tsx","componets/UI/molecules/HeaderMenu.tsx","componets/UI/organisms/HeaderBar.tsx","componets/UI/organisms/HeaderTitle.tsx","componets/templates/Header.tsx","componets/UI/organisms/Section.tsx","componets/templates/Container.tsx","componets/UI/organisms/FooterMenu.tsx","componets/templates/Footer.tsx","ApiClient/index.ts","pages/data.ts","pages/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Button","title","type","className","Logo","src","logo","alt","MenuItem","items","useState","active","setActive","classActive","onMouseLeave","onMouseEnter","map","item","HeaderMenu","children","HeaderBar","HeaderTitle","subTitle","Header","Section","Container","sections","image","position","section","description","FooterMenu","Footer","getData","a","Axios","get","sections1","sections2","sections3","Main","section1","setSection1","section2","setSection2","section3","setSection3","useEffect","data","status","info","body","loadInfo","image1","image2","image3","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bbefdd41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1591bc20.svg\";","export default __webpack_public_path__ + \"static/media/illustration-editor-desktop.c6c8050a.svg\";","export default __webpack_public_path__ + \"static/media/illustration-phones.fd23559f.svg\";","export default __webpack_public_path__ + \"static/media/illustration-laptop-desktop.799209c2.svg\";","import React from 'react';\n\ninterface IProp {\n  title: string;\n  type?: 'primary' | 'outlined' | 'link';\n}\n\nconst Button = ({ title, type = 'primary' }: IProp) => {\n  return <button className={`button button--${type}`}>{title}</button>\n};\n\nexport default Button;\n","import React from 'react';\nimport logo from '../../../assets/logo.svg';\n\nconst Logo = () => <img className=\"logo\" src={logo} alt=\"logo\" />;\n\nexport default Logo;\n","import React, { useState } from 'react';\n\ninterface IProp {\n  title: string;\n  items?: string[];\n}\n\nconst MenuItem = ({ title, items }: IProp) => {\n  const [active, setActive] = useState(false);\n  const classActive = active ? 'active' : 'inactive';\n  return (\n    <div className=\"dropdowm\" onMouseLeave={() => setActive(false)} onMouseEnter={() => setActive(true)}>\n      <a className={`dropdowm__link dropdowm__link--${classActive}`}>{title}</a>\n      <div className={`dropdowm__content dropdowm__content--${classActive}`}>\n        {items?.map(item => <a className=\"dropdowm__item\">{item}</a>)}\n      </div>\n    </div>)\n};\n\nexport default MenuItem;\n","import React from 'react';\nimport { IMenuItem } from '../../../interfaces/IMenuItem';\nimport MenuItem from '../atoms/MenuItem';\n\ninterface IProp {\n  items: IMenuItem[];\n}\n\nconst HeaderMenu = ({ items }: IProp) => {\n  return <div className=\"header__menu\">\n    {items.map(item => <MenuItem title={item.title} items={item.children} />)}\n  </div>\n};\n\nexport default HeaderMenu;\n","import React from 'react';\nimport { IMenuItem } from '../../../interfaces/IMenuItem';\nimport Button from '../../UI/atoms/Button';\nimport Logo from '../../UI/atoms/Logo';\nimport HeaderMenu from '../../UI/molecules/HeaderMenu';\n\ninterface IProp {\n  items: IMenuItem[];\n}\n\nconst HeaderBar = ({ items }: IProp) => {\n  return (\n    <div className=\"header__bar\">\n      <div className=\"header__nav\">\n        <Logo />\n        <HeaderMenu items={items} />\n      </div>\n      <div className=\"header__auth\">\n        <Button title=\"Login\" type=\"link\" />\n        <Button title=\"Sign Up\" />\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderBar;\n","import React from 'react';\nimport Button from '../atoms/Button';\n\ninterface IProp {\n  title: string;\n  subTitle?: string;\n}\n\nconst HeaderTitle = ({ title, subTitle }: IProp) => {\n  return (\n    <div className=\"header__content\">\n      <h1 className=\"header__title\">{title}</h1>\n      <h4 className=\"header__subtitle\">{subTitle}</h4>\n      <div className=\"header__auth\">\n        <Button title=\"Start for Free\" />\n        <Button title=\"Learn More\" type=\"outlined\" />\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderTitle;\n","import React from 'react';\nimport { IMenuItem } from '../../interfaces/IMenuItem';\nimport HeaderBar from '../UI/organisms/HeaderBar';\nimport HeaderTitle from '../UI/organisms/HeaderTitle';\n\ninterface IProp {\n  items: IMenuItem[];\n}\n\nconst Header = ({ items }: IProp) => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <HeaderBar items={items} />\n        <HeaderTitle title=\"A modern publishing platform\" subTitle=\"Grow your audience and build your online brand\" />\n      </div>\n    </header>\n  )\n}\n\nexport default Header;\n","import React, { FunctionComponent } from 'react';\n\ninterface IProp {\n  title: string;\n  alt?: boolean;\n}\n\nconst Section: FunctionComponent<IProp> = ({ title, alt, children }) => {\n  return (\n    <div className=\"section\">\n      <h4 className={`section__title ${alt ? 'section__title--alt' : ''}`}>{title}</h4>\n      <p className=\"section__description\">\n        {children}\n      </p>\n    </div>\n\n  )\n}\n\nexport default Section;\n","import React from 'react';\nimport { ISection } from '../../interfaces/ISections';\n\nimport Section from '../UI/organisms/Section';\n\ninterface IProp {\n  title?: string;\n  sections: ISection[];\n  image: any;\n  position?: 'default' | 'reverse';\n  alt?: boolean;\n}\n\nconst Container = ({ title, sections, image, position = 'default', alt }: IProp) => {\n  return (\n    <section className={`container container--${position} ${alt ? 'container--alt' : ''}`}>\n      {title && (<h2 className=\"container__title\">{title}</h2>)}\n      <div className={`container__info container__info--${position}`}>\n        {sections.map(section =>\n          <Section title={section.title} alt={alt}>\n            {section.description}\n          </Section>\n        )}\n      </div>\n      <div className={`container__image container__image--${position} ${alt ? 'container__image--alt' : ''}`}>\n        <img src={image} alt=\"section\" />\n      </div>\n    </section>\n  )\n}\n\nexport default Container;\n","import React from 'react';\n\ninterface IProp {\n  title: string;\n  items: string[]\n}\n\nconst FooterMenu = ({ title, items }: IProp) => {\n  return (\n    <div className=\"footer__column\">\n      <h4 className=\"footer__title\">{title}</h4>\n      {items.map(item => <a className=\"footer__item\">{item}</a>)}\n    </div>\n  )\n}\n\nexport default FooterMenu;\n","import React from 'react';\nimport FooterMenu from '../UI/organisms/FooterMenu';\n\ninterface IProp {\n  logo: any;\n  items: {\n    title: string;\n    items: string[];\n  }[];\n}\n\nconst Footer = ({ logo, items }: IProp) => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <div className=\"footer__column\"><img className=\"footer__logo\" src={logo} alt=\"logo\" /></div>\n        {items.map(item => <FooterMenu title={item.title} items={item.items} />)}\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import Axios, { AxiosResponse } from 'axios';\n\nconst URL = `https://posts-test-sting.vercel.app/api`;\n\nexport const getData = async (): Promise<AxiosResponse> => {\n  return await Axios.get(URL);\n};\n","import { ISection } from \"../interfaces/ISections\";\n\nexport const sections1: ISection[] = [\n  {\n    title: 'Introducing an extensible editor',\n    description: `Blogr features an exceedingly intuitive interface which lets you focus on one thing: creating content.\n    The editor supports management of multiple blogs and allows easy manipulation of embeds such as images,\n    videos, and Markdown. Extensibility with plugins and themes provide easy ways to add functionality or\n    change the looks of a blog.`,\n\n  },\n  {\n    title: 'Robust content management',\n    description: `Flexible content management enables users to easily move through posts. Increase the usability of your blog\n    by adding customized categories, sections, format, or flow. With this functionality, you’re in full control.`\n  },\n];\nexport const sections2: ISection[] = [\n  {\n    title: 'State of the Art Infrastructure',\n    description: `With reliability and speed in mind, worldwide data centers provide the backbone for ultra-fast connectivity.\n    This ensures your site will load instantly, no matter where your readers are, keeping your site competitive.\n  `,\n  },\n];\nexport const sections3: ISection[] = [\n  {\n    title: 'Free, open, simple',\n    description: `Blogr is a free and open source application backed by a large community of helpful developers. It supports\n    features such as code syntax highlighting, RSS feeds, social media integration, third-party commenting tools,\n    and works seamlessly with Google Analytics. The architecture is clean and is relatively easy to learn.`,\n\n  },\n  {\n    title: 'Powerful tooling',\n    description: `Batteries included. We built a simple and straightforward CLI tool that makes customization and deployment a breeze, but\n    capable of producing even the most complicated sites.`\n  },\n];","import React, { useEffect, useState } from 'react';\nimport logo from '../assets/logo.svg';\nimport image1 from '../assets/illustration-editor-desktop.svg';\nimport image2 from '../assets/illustration-phones.svg';\nimport image3 from '../assets/illustration-laptop-desktop.svg';\nimport Header from '../componets/templates/Header';\nimport { IMenuItem } from '../interfaces/IMenuItem';\nimport { ISection } from '../interfaces/ISections';\nimport Container from '../componets/templates/Container';\nimport Footer from '../componets/templates/Footer';\nimport { getData } from '../ApiClient';\nimport { sections1, sections2, sections3 } from './data';\nimport '../App.css';\n\nconst Main = () => {\n  const [section1, setSection1] = useState<ISection[]>(sections1);\n  const [section2, setSection2] = useState<ISection[]>(sections2);\n  const [section3, setSection3] = useState<ISection[]>(sections3);\n\n  useEffect(() => {\n    const loadInfo = async () => {\n      const { data, status } = await getData();\n      if (status === 200) {\n        const info = data.data;\n        setSection1([\n          {\n            title: info[0].title,\n            description: info[0].body\n          },\n          {\n            title: info[1].title,\n            description: info[1].body\n          },\n        ]);\n        setSection2([\n          {\n            title: info[2].title,\n            description: info[2].body\n          },\n        ]);\n        setSection3([\n          {\n            title: info[3].title,\n            description: info[3].body\n          },\n          {\n            title: info[4].title,\n            description: info[4].body\n          },\n        ]);\n      }\n    }\n    loadInfo();\n  }, []);\n\n  const menu: IMenuItem[] = [\n    {\n      title: 'Product',\n      children: [\n        'Overview',\n        'Pricing',\n        'Marketplace',\n        'Features',\n        'Integrations',\n      ]\n    },\n    {\n      title: 'Company',\n      children: [\n        'About',\n        'Team',\n        'Blog',\n        'Careers',\n      ]\n    },\n    {\n      title: 'Connect',\n      children: [\n        'Contact',\n        'Newsletter',\n        'LinkedIn',\n      ]\n    }\n  ];\n\n\n  const footerList = [\n    {\n      title: 'Product',\n      items: [\n        'Overview',\n        'Pricing',\n        'Marketplace',\n        'Features',\n        'Integrations',\n      ]\n    },\n    {\n      title: 'Company',\n      items: [\n        'About',\n        'Team',\n        'Blog',\n        'Careers',\n      ]\n    },\n    {\n      title: 'Connect',\n      items: [\n        'Contact',\n        'Newsletter',\n        'LinkedIn',\n      ]\n    },\n  ]\n  return (\n    <div className=\"App\">\n\n      <Header items={menu} />\n\n      <Container title=\"Designed for the future\" sections={section1} image={image1} />\n\n      <Container sections={section2} image={image2} position=\"reverse\" alt />\n\n      <Container sections={section3} image={image3} position=\"reverse\" />\n\n      <Footer logo={logo} items={footerList} />\n\n    </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './pages/Main';\n\nconst App = () => {\n  return <Main />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}